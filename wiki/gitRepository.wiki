#summary git Repository


= Introduction =

There exists a git repository for the firmware code in this project. This page is under construction!


= Site =

The git repository is located at https://github.com/amontefusco/sdr-widget

= Getting Started =

You may install an Eclipse plugin which works with AVR32studio. With AVR32studio installed, add the git plugin from ...
Install by following these steps:

  * Download ...
  * ...

On Cygwin, search for "git" packages in setup.exe and install them. On a Linux system with apt run "apt-get install xxx". For both, with the command line you can follow these steps to get started:

  * Make a local directory for your copy of the repository, here: "github". 
  * cd github
  * git clone git://github.com/amontefusco/sdr-widget.git
  * cd sdr-widget
  * git checkout master (Change branch)
  * git branch sdr-widget-local (Create local branch)
  * git checkout sdr-widget-local (Switch to local branch)
  * At this stage you can import github/sdr-widget into AVR32studio. Don't forget to change the target to Release.
  * ...
The latest from Roger:

  * clone the github repository
    git clone git://github.com/amontefusco/sdr-widget.git
  * change directory into the clone, so git knows what you're talking about
    cd sdr-widget
  * tell git to grab all the branches and tags
    git fetch origin
  * checkout the master branch
    git checkout master
  * set an environment variable to locate your avr32-gcc
    export AVR32BIN=where-ever-it-is
  * make Release/widget.elf and ./widget-control
    make


= Reading and Writing =

Downloading data from the git repository is called "checkout" while uploading data is called "commit". Checkouts can be done anonymously, but commits require user priviledges. 

  * Register at https://github.com/
  * Request priviledges from Andrea...

See above section for your initial checkout.

To create local branch from master: 

*git checkout master

 
*git branch sdr-widget-local 

If u mess everything up in local, u can delete the branch completely: 

*git branch -D sdr-widget-local 

You can update the latest sdr-widget-2: 

*git checkout master

 
*git pull 

To incorporate the latest pull into your local: 

*git checkout sdr-widget-local 

*git merge master 

Conversely, to incorporate your local changes into sdr-widget-2: 

*git checkout master 

*git merge sdr-widget-local 

After that, u can (with write permission) push your changes to the 
github: 

*git push 

If u are not sure, u can use the git email instructions to email your 
changes as patch files for developers with write access to do the 
merge and push for u. 

= More details =

Not yet fully edited. You'll have to go through these steps before your code goes into the shared online repository. 



See details at http://help.github.com/win-set-up-git/
then:
ssh-keygen -t rsa -C "your@mail.address.com"

Go to www.github.com -> Login -> Account Settings (top right)
  -> SSH Public Keys -> Add another... -> Paste in id_rsa.pub

git config --global user.name "Borge Strand-Bergesen"
git config --global user.email "your@mail.address.com"
git config --global user.password "yourpassword"
git config --global github.user "yourusername"
git config --global github.password "yourpassword"

Not sure if this step is needed:
Go to www.github.com -> Login -> Account Settings (top right) 
  -> Account Admin (left) -> API Token
git config --global github.token ded42c2eccfded50316d9e037749f911token

Now you can start accessing code if you intend to push your changes back!

git clone git@github.com:amontefusco/sdr-widget.git

Follow above instructions for local branches, merges etc.

After adding creating file.txt

git add file.txt

After doing your edits:

git commit -a -m 'Message: what did you change?'

If you're really sure your changes belong in the remote github repository:

git push



= git Documentation =

Some git documentation can be found at:
  * http://www.kernel.org/pub/software/scm/git/docs/user-manual.html
  * http://www.kernel.org/pub/software/scm/git/docs/gittutorial.html
  * http://gnuradio.org/redmine/wiki/gnuradio/DevelopingWithGit
  * http://blog.xkoder.com/2008/08/13/git-tutorial-starting-with-git-using-just-10-commands/